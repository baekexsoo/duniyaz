!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("rxjs"),require("@angular/common")):"function"==typeof define&&define.amd?define("angular-paginator",["exports","@angular/core","rxjs","@angular/common"],t):t(e["angular-paginator"]={},e.ng.core,e.rxjs,e.ng.common)}(this,function(e,a,i,t){"use strict";var n=function(){function e(){this.id="ANGULAR_PAGINATOR_DEFAULT",this.instances={},this.change=new a.EventEmitter}return e.prototype.registerInstance=function(e){this.instances[e.id]?this.updateInstance(e)&&this.change.emit(e.id):(this.instances[e.id]=e,this.change.emit(e.id))},e.prototype.updateInstance=function(e){for(var t in e)if(e[t]!==this.instances[e.id][t])return this.instances[e.id][t]=e[t],!0;return!1},e.prototype.getInstance=function(e){return this.instances[e]},e.prototype.getCurrentPage=function(e){return this.instances[e].currentPage},e.decorators=[{type:a.Injectable}],e.ctorParameters=function(){return[]},e}(),r=function(){function e(e){this._angularPaginatorService=e,this.boundaryLinks=!1,this.directionLinks=!0,this.maxSize=5,this.rotate=!0,this.boundaryLinkNumbers=!1,this.forceEllipses=!1,this.firstText="First",this.previousText="Previous",this.nextText="Next",this.lastText="Last",this.screenReaderFirstText="First",this.screenReaderPreviousText="Previous",this.screenReaderNextText="Next",this.screenReaderLastText="Last",this.screenReaderPageText="Page",this.screenReaderCurrentPageText="You`re on page",this.screenReaderPaginationLabel="Pagination",this.autoHide=!1,this.disabled=!1,this.pageChange=new a.EventEmitter}return e.prototype.ngOnInit=function(){this.id=this.id?this.id:this._angularPaginatorService.id,this.className=this.className?this.className:this._angularPaginatorService.id},e.decorators=[{type:a.Component,args:[{selector:"app-angular-paginator",template:'<appAngularPaginator [id]="id" [boundaryLinks]="boundaryLinks" [directionLinks]="directionLinks" [maxSize]="maxSize"\n  [rotate]="rotate" [boundaryLinkNumbers]="boundaryLinkNumbers" [forceEllipses]="forceEllipses" #paginator="angularPaginator"\n  (pageChange)="pageChange.emit($event)">\n\n  \x3c!-- ======================================== BOOTSTRAP 4 TEMPLATE ======================================== --\x3e\n  <ng-container *ngIf="!(autoHide && paginator.pages[\'length\'] <= 1)">\n    <nav class="angular-bs4-pagination" [attr.aria-label]="screenReaderPaginationLabel">\n\n      <ng-container *ngIf="paginator.pages[\'length\'] !== 0">\n        <ul class="pagination" [ngClass]="className">\n\n          \x3c!-- boundary link --\x3e\n          <li class="page-item" *ngIf="boundaryLinks" (click)="paginator.toFirstPage()" [ngClass]="{\'disabled\': (paginator.currentPage === paginator.firstPage) || disabled}">\n            <a class="page-link" href="javascript:void(0)">\n              <span aria-hidden="true" [innerHTML]="firstText"></span>\n              <span class="sr-only">{{ screenReaderFirstText }}</span>\n            </a>\n          </li>\n\n          \x3c!-- direction link --\x3e\n          <li class="page-item" *ngIf="directionLinks" (click)="paginator.toPreviousPage()" [ngClass]="{\'disabled\': (paginator.currentPage === paginator.firstPage) || disabled}">\n            <a class="page-link" href="javascript:void(0)">\n              <span aria-hidden="true" [innerHTML]="previousText"></span>\n              <span class="sr-only">{{ screenReaderPreviousText }}</span>\n            </a>\n          </li>\n\n          \x3c!-- pagination array --\x3e\n          <li class="page-item" *ngFor="let page of paginator.pages" [ngClass]="{\'active\': page[\'active\'], \'disabled\': disabled}"\n            (click)="!page[\'active\'] && paginator.setCurrentPage(page[\'number\'])">\n            <a href="javascript:void(0)" class="page-link">\n              {{ page[\'text\'] }}\n              <span class="sr-only" *ngIf="!page[\'active\']">{{ screenReaderPageText + \' \' }}{{ page[\'text\'] }}</span>\n              <span class="sr-only" *ngIf="page[\'active\']">{{ screenReaderCurrentPageText + \' \' }}{{ page[\'text\'] }}</span>\n            </a>\n          </li>\n\n          \x3c!-- direction link --\x3e\n          <li class="page-item" *ngIf="directionLinks" (click)="paginator.toNextPage()" [ngClass]="{\'disabled\': (paginator.currentPage === paginator.lastPage) || disabled}">\n            <a class="page-link" href="javascript:void(0)">\n              <span aria-hidden="true" [innerHTML]="nextText"></span>\n              <span class="sr-only">{{ screenReaderNextText }}</span>\n            </a>\n          </li>\n\n          \x3c!-- boundary link --\x3e\n          <li class="page-item" *ngIf="boundaryLinks" (click)="paginator.toLastPage()" [ngClass]="{\'disabled\': (paginator.currentPage === paginator.lastPage) || disabled}">\n            <a class="page-link" href="javascript:void(0)">\n              <span aria-hidden="true" [innerHTML]="lastText"></span>\n              <span class="sr-only">{{ screenReaderLastText }}</span>\n            </a>\n          </li>\n\n        </ul>\n      </ng-container>\n\n    </nav>\n  </ng-container>\n\n</appAngularPaginator>\n',changeDetection:a.ChangeDetectionStrategy.OnPush,styles:[".angular-bs4-pagination .disabled{pointer-events:none}"]}]}],e.ctorParameters=function(){return[{type:n}]},e.propDecorators={boundaryLinks:[{type:a.Input}],directionLinks:[{type:a.Input}],maxSize:[{type:a.Input}],rotate:[{type:a.Input}],boundaryLinkNumbers:[{type:a.Input}],forceEllipses:[{type:a.Input}],id:[{type:a.Input}],firstText:[{type:a.Input}],previousText:[{type:a.Input}],nextText:[{type:a.Input}],lastText:[{type:a.Input}],screenReaderFirstText:[{type:a.Input}],screenReaderPreviousText:[{type:a.Input}],screenReaderNextText:[{type:a.Input}],screenReaderLastText:[{type:a.Input}],screenReaderPageText:[{type:a.Input}],screenReaderCurrentPageText:[{type:a.Input}],screenReaderPaginationLabel:[{type:a.Input}],className:[{type:a.Input}],autoHide:[{type:a.Input}],disabled:[{type:a.Input}],pageChange:[{type:a.Output}]},e}(),s=function(){function e(e){this._angularPaginatorService=e}return e.prototype.transform=function(e,t){var n=this.createInstance(e,t);this._angularPaginatorService.registerInstance(n);var a=(n.currentPage-1)*n.itemsPerPage,i=n.currentPage*n.itemsPerPage;return e.slice(a,i)},e.prototype.createInstance=function(e,t){return{id:t.id?t.id:this._angularPaginatorService.id,currentPage:t.currentPage?t.currentPage:1,itemsPerPage:t.itemsPerPage?t.itemsPerPage:10,totalItems:e.length}},e.decorators=[{type:a.Pipe,args:[{name:"angularPaginator"}]}],e.ctorParameters=function(){return[{type:n}]},e}(),o=function(){function e(e,t){var n=this;this._angularPaginatorService=e,this._changeDetectorRef=t,this.firstPage=1,this.pages=[],this.subscription=new i.Subject,this.pageChange=new a.EventEmitter(!0),this.subscription=this._angularPaginatorService.change.subscribe(function(e){e===n.id&&(n.updatePages(),n._changeDetectorRef.markForCheck())})}return e.prototype.toPreviousPage=function(){this.currentPage>this.firstPage&&this.setCurrentPage(this.currentPage-1)},e.prototype.toNextPage=function(){this.currentPage<this.lastPage&&this.setCurrentPage(this.currentPage+1)},e.prototype.toFirstPage=function(){this.setCurrentPage(this.firstPage)},e.prototype.toLastPage=function(){this.setCurrentPage(this.lastPage)},e.prototype.setCurrentPage=function(e){e&&this.currentPage!==e&&(this.currentPage=e,this.pageChange.emit(e))},e.prototype.makePage=function(e,t,n){return{number:e,text:t,active:n}},e.prototype.getPages=function(e,t,n){var a=[],i=this.lastPage=Math.ceil(n/t),r=1,s=i,o=this.maxSize&&this.maxSize<i;o&&(this.rotate?i<(s=(r=Math.max(e-Math.floor(this.maxSize/2),1))+this.maxSize-1)&&(r=(s=i)-this.maxSize+1):(r=(Math.ceil(e/this.maxSize)-1)*this.maxSize+1,s=Math.min(r+this.maxSize-1,i)));for(var g=r;g<=s;g++){var p=this.makePage(g,g,g===e);a.push(p)}if(o&&0<this.maxSize&&(!this.rotate||this.forceEllipses||this.boundaryLinkNumbers)){if(1<r){if(!this.boundaryLinkNumbers||3<r){var u=this.makePage(r-1,"...",!1);a.unshift(u)}if(this.boundaryLinkNumbers){if(3===r){var c=this.makePage(2,"2",!1);a.unshift(c)}var h=this.makePage(1,"1",!1);a.unshift(h)}}if(s<i){if(!this.boundaryLinkNumbers||s<i-2){var l=this.makePage(s+1,"...",!1);a.push(l)}if(this.boundaryLinkNumbers){if(s===i-2){var d=this.makePage(i-1,i-1,!1);a.push(d)}var P=this.makePage(i,i,!1);a.push(P)}}}return a},e.prototype.updatePages=function(){var e=this._angularPaginatorService.getInstance(this.id),t=this.outOfBoundCorrection(e);t===e.currentPage&&this.currentPage===e.currentPage||this.setCurrentPage(t),this.pages=this.getPages(e.currentPage,e.itemsPerPage,e.totalItems)},e.prototype.outOfBoundCorrection=function(e){var t=Math.ceil(e.totalItems/e.itemsPerPage);return t<e.currentPage&&0<t?t:e.currentPage<1?1:e.currentPage},e.prototype.isValidId=function(){if(!this._angularPaginatorService.getInstance(this.id))throw new Error("There is no instance registered with id `"+this.id+"`")},e.prototype.ngOnInit=function(){this.isValidId(),this.updatePages()},e.prototype.ngOnDestroy=function(){this.subscription.unsubscribe()},e.decorators=[{type:a.Directive,args:[{selector:"appAngularPaginator, [appAngularPaginator]",exportAs:"angularPaginator"}]}],e.ctorParameters=function(){return[{type:n},{type:a.ChangeDetectorRef}]},e.propDecorators={boundaryLinks:[{type:a.Input}],directionLinks:[{type:a.Input}],maxSize:[{type:a.Input}],rotate:[{type:a.Input}],boundaryLinkNumbers:[{type:a.Input}],forceEllipses:[{type:a.Input}],id:[{type:a.Input}],pageChange:[{type:a.Output}]},e}(),g=function(){function e(){}return e.decorators=[{type:a.NgModule,args:[{imports:[t.CommonModule],providers:[n],declarations:[r,s,o],exports:[r,s,o]}]}],e}();e.AngularPaginatorModule=g,e.ɵb=r,e.ɵd=o,e.ɵc=s,e.ɵa=n,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=angular-paginator.umd.min.js.map