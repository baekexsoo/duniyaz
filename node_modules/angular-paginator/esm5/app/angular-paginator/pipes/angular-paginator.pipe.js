/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
import { AngularPaginatorService } from '../services/angular-paginator.service';
/**
 * Pagination Pipe which paginates the array for the provided arguments such as `itemsPerPage` and `currentPage`
 */
var AngularPaginatorPipe = /** @class */ (function () {
    /**
     *
     * @param _angularPaginatorService service for angular pagiantor
     */
    function AngularPaginatorPipe(_angularPaginatorService) {
        this._angularPaginatorService = _angularPaginatorService;
    }
    /**
     * this pipes paginates the array for the provided arguments such as `itemsPerPage` and `currentPage`
     *
     * @param array input array for which the manipulation happens
     * @param args input arguments for the paginator pipe
     */
    /**
     * this pipes paginates the array for the provided arguments such as `itemsPerPage` and `currentPage`
     *
     * @param {?} array input array for which the manipulation happens
     * @param {?=} args input arguments for the paginator pipe
     * @return {?}
     */
    AngularPaginatorPipe.prototype.transform = /**
     * this pipes paginates the array for the provided arguments such as `itemsPerPage` and `currentPage`
     *
     * @param {?} array input array for which the manipulation happens
     * @param {?=} args input arguments for the paginator pipe
     * @return {?}
     */
    function (array, args) {
        /** @type {?} */
        var instance = this.createInstance(array, args);
        // create pagination information
        this._angularPaginatorService.registerInstance(instance);
        /** @type {?} */
        var start = (instance.currentPage - 1) * instance.itemsPerPage;
        /** @type {?} */
        var end = instance.currentPage * instance.itemsPerPage;
        return array.slice(start, end);
    };
    /**
     * create an instance for each pipe
     *
     * @param array input array for which the manipulation happens
     * @param args input arguments for the paginator pipe
     */
    /**
     * create an instance for each pipe
     *
     * @param {?} array input array for which the manipulation happens
     * @param {?} args input arguments for the paginator pipe
     * @return {?}
     */
    AngularPaginatorPipe.prototype.createInstance = /**
     * create an instance for each pipe
     *
     * @param {?} array input array for which the manipulation happens
     * @param {?} args input arguments for the paginator pipe
     * @return {?}
     */
    function (array, args) {
        return {
            id: args['id'] ? args.id : this._angularPaginatorService.id,
            currentPage: args['currentPage'] ? args['currentPage'] : 1,
            itemsPerPage: args['itemsPerPage'] ? args['itemsPerPage'] : 10,
            totalItems: array['length']
        };
    };
    AngularPaginatorPipe.decorators = [
        { type: Pipe, args: [{
                    name: 'angularPaginator'
                },] }
    ];
    /** @nocollapse */
    AngularPaginatorPipe.ctorParameters = function () { return [
        { type: AngularPaginatorService }
    ]; };
    return AngularPaginatorPipe;
}());
export { AngularPaginatorPipe };
if (false) {
    /** @type {?} */
    AngularPaginatorPipe.prototype._angularPaginatorService;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci1wYWdpbmF0b3IucGlwZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItcGFnaW5hdG9yLyIsInNvdXJjZXMiOlsiYXBwL2FuZ3VsYXItcGFnaW5hdG9yL3BpcGVzL2FuZ3VsYXItcGFnaW5hdG9yLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBQ3BELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHVDQUF1QyxDQUFDOzs7OztJQVc5RTs7O09BR0c7SUFDSCw4QkFBb0Isd0JBQWlEO1FBQWpELDZCQUF3QixHQUF4Qix3QkFBd0IsQ0FBeUI7S0FBSztJQUUxRTs7Ozs7T0FLRzs7Ozs7Ozs7SUFDSCx3Q0FBUzs7Ozs7OztJQUFULFVBQVUsS0FBVSxFQUFFLElBQVU7O1FBRTlCLElBQU0sUUFBUSxHQUE2QixJQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQzs7UUFHNUUsSUFBSSxDQUFDLHdCQUF3QixDQUFDLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxDQUFDOztRQUd6RCxJQUFNLEtBQUssR0FBRyxDQUFDLFFBQVEsQ0FBQyxXQUFXLEdBQUcsQ0FBQyxDQUFDLEdBQUcsUUFBUSxDQUFDLFlBQVksQ0FBQzs7UUFDakUsSUFBTSxHQUFHLEdBQUcsUUFBUSxDQUFDLFdBQVcsR0FBRyxRQUFRLENBQUMsWUFBWSxDQUFDO1FBRXpELE9BQU8sS0FBSyxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUFDLENBQUM7S0FFaEM7SUFFRDs7Ozs7T0FLRzs7Ozs7Ozs7SUFDSCw2Q0FBYzs7Ozs7OztJQUFkLFVBQWUsS0FBVSxFQUFFLElBQVM7UUFDbEMsT0FBTztZQUNMLEVBQUUsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyx3QkFBd0IsQ0FBQyxFQUFFO1lBQzNELFdBQVcsRUFBRSxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUMxRCxZQUFZLEVBQUUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7WUFDOUQsVUFBVSxFQUFFLEtBQUssQ0FBQyxRQUFRLENBQUM7U0FDNUIsQ0FBQztLQUNIOztnQkE3Q0YsSUFBSSxTQUFDO29CQUNKLElBQUksRUFBRSxrQkFBa0I7aUJBQ3pCOzs7O2dCQVJRLHVCQUF1Qjs7K0JBRGhDOztTQVdhLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFuZ3VsYXJQYWdpbmF0b3JTZXJ2aWNlIH0gZnJvbSAnLi4vc2VydmljZXMvYW5ndWxhci1wYWdpbmF0b3Iuc2VydmljZSc7XG5pbXBvcnQgeyBBbmd1bGFyUGFnaW5hdG9ySW5zdGFuY2UgfSBmcm9tICcuLi9vdGhlcnMvYW5ndWxhci1wYWdpbmF0b3IuaW50ZXJmYWNlJztcblxuLyoqXG4gKiBQYWdpbmF0aW9uIFBpcGUgd2hpY2ggcGFnaW5hdGVzIHRoZSBhcnJheSBmb3IgdGhlIHByb3ZpZGVkIGFyZ3VtZW50cyBzdWNoIGFzIGBpdGVtc1BlclBhZ2VgIGFuZCBgY3VycmVudFBhZ2VgXG4gKi9cbkBQaXBlKHtcbiAgbmFtZTogJ2FuZ3VsYXJQYWdpbmF0b3InXG59KVxuXG5leHBvcnQgY2xhc3MgQW5ndWxhclBhZ2luYXRvclBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgLyoqXG4gICAqXG4gICAqIEBwYXJhbSBfYW5ndWxhclBhZ2luYXRvclNlcnZpY2Ugc2VydmljZSBmb3IgYW5ndWxhciBwYWdpYW50b3JcbiAgICovXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgX2FuZ3VsYXJQYWdpbmF0b3JTZXJ2aWNlOiBBbmd1bGFyUGFnaW5hdG9yU2VydmljZSkgeyB9XG5cbiAgLyoqXG4gICAqIHRoaXMgcGlwZXMgcGFnaW5hdGVzIHRoZSBhcnJheSBmb3IgdGhlIHByb3ZpZGVkIGFyZ3VtZW50cyBzdWNoIGFzIGBpdGVtc1BlclBhZ2VgIGFuZCBgY3VycmVudFBhZ2VgXG4gICAqXG4gICAqIEBwYXJhbSBhcnJheSBpbnB1dCBhcnJheSBmb3Igd2hpY2ggdGhlIG1hbmlwdWxhdGlvbiBoYXBwZW5zXG4gICAqIEBwYXJhbSBhcmdzIGlucHV0IGFyZ3VtZW50cyBmb3IgdGhlIHBhZ2luYXRvciBwaXBlXG4gICAqL1xuICB0cmFuc2Zvcm0oYXJyYXk6IGFueSwgYXJncz86IGFueSk6IGFueSB7XG5cbiAgICBjb25zdCBpbnN0YW5jZTogQW5ndWxhclBhZ2luYXRvckluc3RhbmNlID0gdGhpcy5jcmVhdGVJbnN0YW5jZShhcnJheSwgYXJncyk7XG5cbiAgICAvLyBjcmVhdGUgcGFnaW5hdGlvbiBpbmZvcm1hdGlvblxuICAgIHRoaXMuX2FuZ3VsYXJQYWdpbmF0b3JTZXJ2aWNlLnJlZ2lzdGVySW5zdGFuY2UoaW5zdGFuY2UpO1xuXG4gICAgLy8gc2V0IHRoZSBzbGljaW5nIHJhbmdlXG4gICAgY29uc3Qgc3RhcnQgPSAoaW5zdGFuY2UuY3VycmVudFBhZ2UgLSAxKSAqIGluc3RhbmNlLml0ZW1zUGVyUGFnZTtcbiAgICBjb25zdCBlbmQgPSBpbnN0YW5jZS5jdXJyZW50UGFnZSAqIGluc3RhbmNlLml0ZW1zUGVyUGFnZTtcblxuICAgIHJldHVybiBhcnJheS5zbGljZShzdGFydCwgZW5kKTtcblxuICB9XG5cbiAgLyoqXG4gICAqIGNyZWF0ZSBhbiBpbnN0YW5jZSBmb3IgZWFjaCBwaXBlXG4gICAqXG4gICAqIEBwYXJhbSBhcnJheSBpbnB1dCBhcnJheSBmb3Igd2hpY2ggdGhlIG1hbmlwdWxhdGlvbiBoYXBwZW5zXG4gICAqIEBwYXJhbSBhcmdzIGlucHV0IGFyZ3VtZW50cyBmb3IgdGhlIHBhZ2luYXRvciBwaXBlXG4gICAqL1xuICBjcmVhdGVJbnN0YW5jZShhcnJheTogYW55LCBhcmdzOiBhbnkpOiBhbnkge1xuICAgIHJldHVybiB7XG4gICAgICBpZDogYXJnc1snaWQnXSA/IGFyZ3MuaWQgOiB0aGlzLl9hbmd1bGFyUGFnaW5hdG9yU2VydmljZS5pZCxcbiAgICAgIGN1cnJlbnRQYWdlOiBhcmdzWydjdXJyZW50UGFnZSddID8gYXJnc1snY3VycmVudFBhZ2UnXSA6IDEsXG4gICAgICBpdGVtc1BlclBhZ2U6IGFyZ3NbJ2l0ZW1zUGVyUGFnZSddID8gYXJnc1snaXRlbXNQZXJQYWdlJ10gOiAxMCxcbiAgICAgIHRvdGFsSXRlbXM6IGFycmF5WydsZW5ndGgnXVxuICAgIH07XG4gIH1cbn1cbiJdfQ==